swagger: '2.0'
info:
  title: Sendcloud Test - RSS Scraper API
  description: This is the API for a RSS feed scraper.
  version: "1.0.0"
# the domain of the service
host: localhost:8000
# array of all schemes that your API supports
schemes:
  - http
# will be prefixed to all paths
basePath: /api/v1
produces:
  - application/json
paths:
    /feed/{feed_id}:
      get:
        summary: GET a feed by UID
        description: This URL is used to fetch a feed by is UID.
        parameters:
          - name: feed_id
            in: path
            type: integer
            description: The UID of the feed to fetch
            required: true
        tags:
          - Feed
        responses:
          200:
            description: A feed object
            schema:
              $ref: '#/definitions/Feed'
          400:
            description: Bad Request
            schema:
              $ref: '#/definitions/Error'
          401:
            description: Unauthorized
            schema:
              $ref: '#/definitions/Error'
          403:
            description: Forbidden
            schema:
              $ref: '#/definitions/Error'
          404:
            description: Not Found
            schema:
              $ref: '#/definitions/Error'
          500:
            description: Server Error
            schema:
              $ref: '#/definitions/Error'
          default:
            description: Unexpected error
            schema:
              $ref: '#/definitions/Error'
      delete:
        summary: Endpoint for deleting a feed
        description: This endpoint is used to delete a single feed by its UID. 
        parameters:
          - name: feed_id
            in: path
            description: The UID of the feed to delete
            required: true
            type: integer
        tags:
          - Feed
        responses:
          200:
            description: Success
            schema: 
              type: string
          400:
            description: Bad Request
            schema:
              $ref: '#/definitions/Error'
          401:
            description: Unauthorized
            schema:
              $ref: '#/definitions/Error'
          403:
            description: Forbidden
            schema:
              $ref: '#/definitions/Error'
          404:
            description: Not Found
            schema:
              $ref: '#/definitions/Error'
          500:
            description: Server Error
            schema:
              $ref: '#/definitions/Error'
          default:
            description: Unexpected error
            schema:
              $ref: '#/definitions/Error'
      patch:
        summary: Patch a feed by UID
        description: This endpoint allows the update of a feed's follow status
        parameters:
          - name: feed_id
            in: path
            type: integer
            description: The UID of the feed to fetch
            required: true
          - name: follow
            in: query
            type: boolean
            description: Describes whether a user wantes to follow the feed or not (true/false)
            required: false
          - name: force_update
            in: query
            type: boolean
            description: If set to true, will force an async update on the feed, default is false (true/false)
            required: false
        tags:
          - Feed
        responses:
          200:
            description: A feed object
            schema:
              $ref: '#/definitions/Feed'
          400:
            description: Bad Request
            schema:
              $ref: '#/definitions/Error'
          401:
            description: Unauthorized
            schema:
              $ref: '#/definitions/Error'
          403:
            description: Forbidden
            schema:
              $ref: '#/definitions/Error'
          404:
            description: Not Found
            schema:
              $ref: '#/definitions/Error'
          500:
            description: Server Error
            schema:
              $ref: '#/definitions/Error'
          default:
            description: Unexpected error
            schema:
              $ref: '#/definitions/Error'

    /feed:
      get:
        summary: GET feeds from the API
        description: This endpoint is used to fetch all feed from the API, filtered by the authenticated user id. 
        parameters:
          - name: following
            in: query
            type: boolean
            description: filter feeds based on whether the user follows them or not
            required: false
        tags:
          - Feed
        responses:
          200:
            description: An array of feed objects
            schema:
              type: array
              items:
                $ref: '#/definitions/Feed'
          400:
            description: Bad Request
            schema:
              $ref: '#/definitions/Error'
          401:
            description: Unauthorized
            schema:
              $ref: '#/definitions/Error'
          403:
            description: Forbidden
            schema:
              $ref: '#/definitions/Error'
          404:
            description: Not Found
            schema:
              $ref: '#/definitions/Error'
          500:
            description: Server Error
            schema:
              $ref: '#/definitions/Error'
          default:
            description: Unexpected error
            schema:
              $ref: '#/definitions/Error' 
      post:
        summary: An endpoint for posting feeds to the API
        description: Create a new feed item. The feed is not updated until the next async update job is run or a separate force update is called
        tags:
          - Feed
        responses:
          201:
            description: The feed object
            schema:
              type: array
              items:
                $ref: '#/definitions/Feed'
          400:
            description: Bad Request
            schema:
              $ref: '#/definitions/Error'
          401:
            description: Unauthorized
            schema:
              $ref: '#/definitions/Error'
          403:
            description: Forbidden
            schema:
              $ref: '#/definitions/Error'
          404:
            description: Not Found
            schema:
              $ref: '#/definitions/Error'
          500:
            description: Server Error
            schema:
              $ref: '#/definitions/Error'
          default:
            description: Unexpected error
            schema:
              $ref: '#/definitions/Error'

    /entry/{entry_id}:
      get:
        summary: GET an entry by UID
        description: This URL is used to fetch an entry by is UID.
        parameters:
          - name: entry_id
            in: path
            type: integer
            description: The UID of the entry to fetch
            required: true
        tags:
          - Entry
        responses:
          200:
            description: An entry object
            schema:
              $ref: '#/definitions/Entry'
          400:
            description: Bad Request
            schema:
              $ref: '#/definitions/Error'
          403:
            description: Forbidden
            schema:
              $ref: '#/definitions/Error'
          404:
            description: Not Found
            schema:
              $ref: '#/definitions/Error'
          500:
            description: Server Error
            schema:
              $ref: '#/definitions/Error'
          default:
            description: Unexpected error
            schema:
              $ref: '#/definitions/Error'
      patch:
        summary: Patch an entry by UID
        description: patch an entry with read/unread
        parameters:
          - name: entry_id
            in: path
            type: integer
            description: The UID of the entry to fetch
            required: true
          - name: read
            in: query
            type: boolean
            description: the desired read status of the entry (true/false)
            required: false
        tags:
          - Entry
        responses:
          200:
            description: An entry object
            schema:
              $ref: '#/definitions/Entry'
          400:
            description: Bad Request
            schema:
              $ref: '#/definitions/Error'
          401:
            description: Unauthorized
            schema:
              $ref: '#/definitions/Error'
          403:
            description: Forbidden
            schema:
              $ref: '#/definitions/Error'
          404:
            description: Not Found
            schema:
              $ref: '#/definitions/Error'
          500:
            description: Server Error
            schema:
              $ref: '#/definitions/Error'
          default:
            description: Unexpected error
            schema:
              $ref: '#/definitions/Error'

    /entry:
      get:
        summary: GET entries from the API
        description: This endpoint is used to fetch all entries from the API, filtered by the authenticated user id. 
        parameters:
          - name: feed_id
            in: query
            type: integer
            description: filter based on feed id
            required: false
          - name: read
            in: query
            type: boolean
            description: filter based on read status
            required: false
        tags:
          - Entry
        responses:
          200:
            description: An array of entry objects
            schema:
              type: array
              items:
                $ref: '#/definitions/Entry'
          400:
            description: Bad Request
            schema:
              $ref: '#/definitions/Error'
          401:
            description: Unauthorized
            schema:
              $ref: '#/definitions/Error'
          403:
            description: Forbidden
            schema:
              $ref: '#/definitions/Error'
          404:
            description: Not Found
            schema:
              $ref: '#/definitions/Error'
          500:
            description: Server Error
            schema:
              $ref: '#/definitions/Error'
          default:
            description: Unexpected error
            schema:
              $ref: '#/definitions/Error' 

    /notification/{notification_id}:
      get:
        summary: GET a notification by UID
        description: This URL is used to fetch a notification by is UID.
        parameters:
          - name: notification_id
            in: path
            type: integer
            description: The UID of the notification to fetch
            required: true
        tags:
          - Notification
        responses:
          200:
            description: A notification object
            schema:
              $ref: '#/definitions/Notification'
          400:
            description: Bad Request
            schema:
              $ref: '#/definitions/Error'
          403:
            description: Forbidden
            schema:
              $ref: '#/definitions/Error'
          404:
            description: Not Found
            schema:
              $ref: '#/definitions/Error'
          500:
            description: Server Error
            schema:
              $ref: '#/definitions/Error'
          default:
            description: Unexpected error
            schema:
              $ref: '#/definitions/Error'
      patch:
        summary: Patch an entry by UID
        description: patch an notification with read/unread
        parameters:
          - name: notification_id
            in: path
            type: integer
            description: The UID of the notification to fetch
            required: true
          - name: read
            in: query
            type: boolean
            description: the desired read status of the notification (true/false)
            required: false
        tags:
          - Notification
        responses:
          200:
            description: A notification object
            schema:
              $ref: '#/definitions/Notification'
          400:
            description: Bad Request
            schema:
              $ref: '#/definitions/Error'
          401:
            description: Unauthorized
            schema:
              $ref: '#/definitions/Error'
          403:
            description: Forbidden
            schema:
              $ref: '#/definitions/Error'
          404:
            description: Not Found
            schema:
              $ref: '#/definitions/Error'
          500:
            description: Server Error
            schema:
              $ref: '#/definitions/Error'
          default:
            description: Unexpected error
            schema:
              $ref: '#/definitions/Error'

    /notification:
      get:
        summary: GET notifications from the API
        description: This endpoint is used to fetch all notifications from the API, filtered by the authenticated user id. 
        parameters:
          - name: read
            in: query
            type: boolean
            description: filter based on read status
            required: false
        tags:
          - Notification
        responses:
          200:
            description: An array of notification objects
            schema:
              type: array
              items:
                $ref: '#/definitions/Notification'
          400:
            description: Bad Request
            schema:
              $ref: '#/definitions/Error'
          401:
            description: Unauthorized
            schema:
              $ref: '#/definitions/Error'
          403:
            description: Forbidden
            schema:
              $ref: '#/definitions/Error'
          404:
            description: Not Found
            schema:
              $ref: '#/definitions/Error'
          500:
            description: Server Error
            schema:
              $ref: '#/definitions/Error'
          default:
            description: Unexpected error
            schema:
              $ref: '#/definitions/Error' 

    /user/{user_id}:
      get:
        summary: GET a user by UID
        description: This URL is used to fetch a user by its UID.
        parameters:
          - name: user_id
            in: path
            type: integer
            description: The UID of the user to fetch
            required: true
        tags:
          - User
        responses:
          200:
            description: A user object
            schema:
              $ref: '#/definitions/User'
          400:
            description: Bad Request
            schema:
              $ref: '#/definitions/Error'
          403:
            description: Forbidden
            schema:
              $ref: '#/definitions/Error'
          404:
            description: Not Found
            schema:
              $ref: '#/definitions/Error'
          500:
            description: Server Error
            schema:
              $ref: '#/definitions/Error'
          default:
            description: Unexpected error
            schema:
              $ref: '#/definitions/Error'

    /user:
      get:
        summary: GET users from the API
        description: This endpoint is used to fetch all users from the API, restricted to admin users only 
        tags:
          - User
        responses:
          200:
            description: An array of user objects
            schema:
              type: array
              items:
                $ref: '#/definitions/User'
          400:
            description: Bad Request
            schema:
              $ref: '#/definitions/Error'
          401:
            description: Unauthorized
            schema:
              $ref: '#/definitions/Error'
          403:
            description: Forbidden
            schema:
              $ref: '#/definitions/Error'
          404:
            description: Not Found
            schema:
              $ref: '#/definitions/Error'
          500:
            description: Server Error
            schema:
              $ref: '#/definitions/Error'
          default:
            description: Unexpected error
            schema:
              $ref: '#/definitions/Error' 

     
definitions:
  Feed:
    type: object
    required: ["nickname", "link"]
    properties:
      feed_id:
        type: string
        description: Unique identifier representing a specific feed.
      title:
        type: string
        description: Feed title (automatically updated).
      link:
        type: string
        description: feed url.
      subtitle:
        type: string
        description: feed subtitle.
      description:
        type: string
        description: feed description 
      language:
        type: string
        description: feed language 
      copyright:
        type: string
        description: feed copyright 
      ttl:
        type: string
        description: feed ttl 
      atomLogo:
        type: string
        description: feed logo url 
      pubdate:
        type: string
        description: feed publication date 
      nickname:
        type: string
        description: feed nickname 
      created_at:
        type: string
        description: feed registration date
      updated_at:
        type: string
        description: feed update date. This is not neccessarily a feed fetch, it might be updated by a user
      following:
        type: boolean
        description: whether the feed is followed by the user or not 
     
  Entry:
    type: object
    properties:
      enrt_id:
        type: integer
        description: entry id
      feed:
        type: integer
        description: entry parent feed id     
      state:
        type: string
        description: entry state (0=UNREAD, 1=READ)
      title:
        type: string
        description: entry title 
      author:
        type: string
        description: entry author 
      comments_url:
        type: string
        description: entry comments url 
      guid:
        type: string
        description: entry guid 
      created_at:
        type: string
        description: entry creation date 
      updated_at:
        type: string
        description: entry update date

  Notification:
    type: object
    properties:
      notification_id:
        type: integer
        description: notification id
      owner:
        type: integer
        description: notification user id
      feed:
        type: string
        description: notification feed id
      state:
        type: string
        description: notification state state (0=UNREAD, 1=READ)
      title:
        type: string
        description: notification title
      message:
        type: string
        description: notification message
      is_error:
        type: boolean
        description: notification is_error
      created_at:
        type: string
        description: notification created_at
      updated_at:
        type: string
        description: notification updated_at

  User:
    type: object
    properties:
      user_id:
        type: integer
        description: notification user id
      feeds:
        type: array
        items:
          type: integer
        description: user registered feed ids
      username:
        type: string
        description: user's username
        
  Error:
    type: string